openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: estate.netextend.pl
paths:
  /api/v1/items:
    get:
      summary: ''
      operationId: getApiV1Items
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/item:
    put:
      summary: ''
      operationId: putApiV1Item
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}':
    get:
      summary: ''
      operationId: getApiV1ItemId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ItemId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ItemId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/tenants':
    get:
      summary: ''
      operationId: getApiV1ItemIdTenants
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/tenant':
    put:
      summary: ''
      operationId: putApiV1ItemIdTenant
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/tenant/{tid}':
    get:
      summary: ''
      operationId: getApiV1ItemIdTenantTid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ItemIdTenantTid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ItemIdTenantTid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/tenant/{tid}/terminate':
    post:
      summary: ''
      operationId: postApiV1ItemIdTenantTidTerminate
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/bills':
    get:
      summary: ''
      operationId: getApiV1ItemIdBills
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/bill':
    put:
      summary: ''
      operationId: putApiV1ItemIdBill
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/bill/{bid}':
    get:
      summary: ''
      operationId: getApiV1ItemIdBillBid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ItemIdBillBid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ItemIdBillBid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/bill/{bid}/paid':
    post:
      summary: ''
      operationId: postApiV1ItemIdBillBidPaid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/bill/{bid}/unpaid':
    post:
      summary: ''
      operationId: postApiV1ItemIdBillBidUnpaid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/fees':
    get:
      summary: ''
      operationId: getApiV1ItemIdFees
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/fee':
    put:
      summary: ''
      operationId: putApiV1ItemIdFee
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/item/{id}/fee/{fid}':
    get:
      summary: ''
      operationId: getApiV1ItemIdFeeFid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ItemIdFeeFid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ItemIdFeeFid
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/tenants:
    get:
      summary: ''
      operationId: getApiV1Tenants
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/tenant:
    put:
      summary: ''
      operationId: putApiV1Tenant
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/tenant/{id}':
    get:
      summary: ''
      operationId: getApiV1TenantId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TenantId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TenantId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/tenant/{id}/history':
    get:
      summary: ''
      operationId: getApiV1TenantIdHistory
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/dictionaries:
    get:
      summary: ''
      operationId: getApiV1Dictionaries
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/dictionaries/{type}':
    get:
      summary: ''
      operationId: getApiV1DictionariesType
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/dictionary:
    put:
      summary: ''
      operationId: putApiV1Dictionary
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/dictionary/{id}':
    get:
      summary: ''
      operationId: getApiV1DictionaryId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1DictionaryId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1DictionaryId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/customers:
    get:
      summary: ''
      operationId: getApiV1Customers
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/customer:
    put:
      summary: ''
      operationId: putApiV1Customer
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/customer/{id}':
    get:
      summary: ''
      operationId: getApiV1CustomerId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1CustomerId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1CustomerId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/v1/notifications:
    get:
      summary: 'Get notifications list'
      operationId: getNotificationsList
      description: 'Return notifications list.'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 19
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 19
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 2
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total_rows: 100
                  total_pages: '4'
                  current_page: 1
                  has_more: true
                  data:
                    -
                      id: 1
                      object_id: 1
                      object_name: 'Task #1'
                      type: 'task:assign'
                      read: 0
                      read_time: null
                      created_at: '2023-01-01 00:00:00'
                      added_user_id: 1
                      added_user: 'John Doe'
                      extra_object_id: 1
                properties:
                  total_rows:
                    type: integer
                    example: 100
                  total_pages:
                    type: string
                    example: '4'
                  current_page:
                    type: integer
                    example: 1
                  has_more:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        object_id: 1
                        object_name: 'Task #1'
                        type: 'task:assign'
                        read: 0
                        read_time: null
                        created_at: '2023-01-01 00:00:00'
                        added_user_id: 1
                        added_user: 'John Doe'
                        extra_object_id: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        object_id:
                          type: integer
                          example: 1
                        object_name:
                          type: string
                          example: 'Task #1'
                        type:
                          type: string
                          example: 'task:assign'
                        read:
                          type: integer
                          example: 0
                        read_time:
                          type: string
                          example: null
                        created_at:
                          type: string
                          example: '2023-01-01 00:00:00'
                        added_user_id:
                          type: integer
                          example: 1
                        added_user:
                          type: string
                          example: 'John Doe'
                        extra_object_id:
                          type: integer
                          example: 1
      tags:
        - Notifications
      security: []
  '/api/v1/notification/{id}':
    get:
      summary: 'Get notification'
      operationId: getNotification
      description: 'Get notification.'
      parameters:
        -
          in: query
          name: id
          description: 'notification identifier'
          example: 11
          required: false
          schema:
            type: integer
            description: 'notification identifier'
            example: 11
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  object_id: 1
                  object_name: 'Task #1'
                  type: 'task:assign'
                  read: 0
                  read_time: null
                  created_at: '2023-01-01 00:00:00'
                  added_user_id: 1
                  added_user: 'John Doe'
                  extra_object_id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  object_id:
                    type: integer
                    example: 1
                  object_name:
                    type: string
                    example: 'Task #1'
                  type:
                    type: string
                    example: 'task:assign'
                  read:
                    type: integer
                    example: 0
                  read_time:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: '2023-01-01 00:00:00'
                  added_user_id:
                    type: integer
                    example: 1
                  added_user:
                    type: string
                    example: 'John Doe'
                  extra_object_id:
                    type: integer
                    example: 1
      tags:
        - Notifications
      security: []
  '/api/v1/notification/read/{id}':
    put:
      summary: 'Set notification as read'
      operationId: setNotificationAsRead
      description: 'Set notification as read.'
      parameters:
        -
          in: query
          name: id
          description: 'notification identifier'
          example: 14
          required: false
          schema:
            type: integer
            description: 'notification identifier'
            example: 14
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notifications
      security: []
  /api/v1/order/create:
    post:
      summary: 'Create order'
      operationId: createOrder
      description: 'Create order and return redirect to payment URL.'
      parameters:
        -
          in: query
          name: package
          description: 'Package name (one of: p1)'
          example: explicabo
          required: false
          schema:
            type: string
            description: 'Package name (one of: p1)'
            example: explicabo
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  url: 'https://...'
                properties:
                  url:
                    type: string
                    example: 'https://...'
      tags:
        - Orders
      security: []
  /api/v1/invoices:
    get:
      summary: 'Get invoices list'
      operationId: getInvoicesList
      description: 'Return invoices list.'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 3
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 3
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 13
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 13
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: '{"total_rows": 100, "total_pages": "4", "current_page": 1, "has_more": true, "data": [{"order_id": 1, "full_number", "date": "2022-12-11", "nip": "0123456789", "name": "John Doe", "street": "Street name", "house_no": 12, "apartment_no": "1A", "zip": "00-123", "city": "London", "amount": 100, "gross": 123, "items": [], "generated": 1, "created_at": "2023-01-01 10:00:00"}]}'
      tags:
        - Orders
      security: []
  '/api/v1/invoice/{id}':
    get:
      summary: 'Get invoice PDF'
      operationId: getInvoicePDF
      description: 'Return invoice pdf.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Orders
      security: []
  /api/v1/validate-invoicing-data:
    get:
      summary: 'Validate invoicing data'
      operationId: validateInvoicingData
      description: 'Validate invoicing data.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - Orders
      security: []
  /api/v1/countries:
    get:
      summary: 'Return countries list'
      operationId: returnCountriesList
      description: ''
      parameters:
        -
          in: query
          name: lang
          description: 'Language Default: pl'
          example: quasi
          required: false
          schema:
            type: string
            description: 'Language Default: pl'
            example: quasi
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Others
      security: []
  '/api/v1/payment/status/{md5}':
    get:
      summary: 'Get payment status'
      operationId: getPaymentStatus
      description: 'Return payment status.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: finished
                properties:
                  status:
                    type: string
                    example: finished
      tags:
        - Payments
      security: []
  /api/v1/search:
    get:
      summary: 'Search task / projects'
      operationId: searchTaskProjects
      description: 'Search in task / projects table by specified query'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 18
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 18
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 18
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 18
        -
          in: query
          name: q
          description: 'search phrase'
          example: tenetur
          required: false
          schema:
            type: string
            description: 'search phrase'
            example: tenetur
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total_rows: 100
                  total_pages: '4'
                  current_page: 1
                  has_more: true
                  data:
                    -
                      id: '1'
                      name: 'Example name'
                      type: task
                      creatd_at: '2023-01-01 10:00:00'
                    -
                      id: '1'
                      name: 'Example project'
                      type: project
                      creatd_at: '2023-01-01 10:00:00'
                properties:
                  total_rows:
                    type: integer
                    example: 100
                  total_pages:
                    type: string
                    example: '4'
                  current_page:
                    type: integer
                    example: 1
                  has_more:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        name: 'Example name'
                        type: task
                        creatd_at: '2023-01-01 10:00:00'
                      -
                        id: '1'
                        name: 'Example project'
                        type: project
                        creatd_at: '2023-01-01 10:00:00'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        name:
                          type: string
                          example: 'Example name'
                        type:
                          type: string
                          example: task
                        creatd_at:
                          type: string
                          example: '2023-01-01 10:00:00'
      tags:
        - Search
      security: []
  '/api/v1/search/{source}':
    get:
      summary: 'Search task / projects / user'
      operationId: searchTaskProjectsUser
      description: 'Search task / projects / user in specified source table'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 6
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 6
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 4
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 4
        -
          in: query
          name: q
          description: 'search phrase'
          example: blanditiis
          required: false
          schema:
            type: string
            description: 'search phrase'
            example: blanditiis
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total_rows: 100
                  total_pages: '4'
                  current_page: 1
                  has_more: true
                  data:
                    -
                      id: '1'
                      firstname: John
                      lastname: Doe
                properties:
                  total_rows:
                    type: integer
                    example: 100
                  total_pages:
                    type: string
                    example: '4'
                  current_page:
                    type: integer
                    example: 1
                  has_more:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        firstname: John
                        lastname: Doe
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        firstname:
                          type: string
                          example: John
                        lastname:
                          type: string
                          example: Doe
      tags:
        - Search
      security: []
    parameters:
      -
        in: path
        name: source
        description: 'Optional parameter. search in source table (one of: tasks, users, projects)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sit
  '/api/v1/stats/user/{id}/daily':
    get:
      summary: 'Get daily user stats'
      operationId: getDailyUserStats
      description: 'Return daily user stats.'
      parameters:
        -
          in: query
          name: month
          description: 'Month in format: "YYYY-MM", Default current month'
          example: quae
          required: false
          schema:
            type: string
            description: 'Month in format: "YYYY-MM", Default current month'
            example: quae
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: '1'
                    firstname: John
                    lastname: Doe
                  month: 2022-12
                  stats:
                    -
                      '2023-06-30':
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'John Doe'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      firstname:
                        type: string
                        example: John
                      lastname:
                        type: string
                        example: Doe
                  month:
                    type: string
                    example: 2022-12
                  stats:
                    type: array
                    example:
                      -
                        '2023-06-30':
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'John Doe'
                              total: 86400
                    items:
                      type: object
                      properties:
                        '2023-06-30':
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'John Doe'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User identifier.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/v1/stats/user/{id}/monthly':
    get:
      summary: 'Get monthy user stats'
      operationId: getMonthyUserStats
      description: 'Return monthy user stats.'
      parameters:
        -
          in: query
          name: year
          description: 'Year in format: "YYYY", Default current year'
          example: tempora
          required: false
          schema:
            type: string
            description: 'Year in format: "YYYY", Default current year'
            example: tempora
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    id: '1'
                    firstname: John
                    lastname: Doe
                  year: '2022'
                  stats:
                    -
                      2023-06:
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'John Doe'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      firstname:
                        type: string
                        example: John
                      lastname:
                        type: string
                        example: Doe
                  year:
                    type: string
                    example: '2022'
                  stats:
                    type: array
                    example:
                      -
                        2023-06:
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'John Doe'
                              total: 86400
                    items:
                      type: object
                      properties:
                        2023-06:
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'John Doe'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User identifier.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/stats/project/{id}/daily':
    get:
      summary: 'Get daily project stats'
      operationId: getDailyProjectStats
      description: 'Return daily project stats.'
      parameters:
        -
          in: query
          name: month
          description: 'Month in format: "YYYY-MM", Default current month'
          example: rerum
          required: false
          schema:
            type: string
            description: 'Month in format: "YYYY-MM", Default current month'
            example: rerum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  project:
                    id: '1'
                    name: 'Example project name'
                  month: 2022-12
                  stats:
                    -
                      '2023-06-30':
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'Task name'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      name:
                        type: string
                        example: 'Example project name'
                  month:
                    type: string
                    example: 2022-12
                  stats:
                    type: array
                    example:
                      -
                        '2023-06-30':
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'Task name'
                              total: 86400
                    items:
                      type: object
                      properties:
                        '2023-06-30':
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'Task name'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Project identifier.'
        example: 4
        required: true
        schema:
          type: integer
  '/api/v1/stats/project/{id}/monthly':
    get:
      summary: 'Get monthy project stats'
      operationId: getMonthyProjectStats
      description: 'Return project user stats.'
      parameters:
        -
          in: query
          name: year
          description: 'Year in format: "YYYY", Default current year'
          example: laborum
          required: false
          schema:
            type: string
            description: 'Year in format: "YYYY", Default current year'
            example: laborum
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  project:
                    id: '1'
                    name: 'Example project name'
                  year: '2022'
                  stats:
                    -
                      2023-06:
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'Task name'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      name:
                        type: string
                        example: 'Example project name'
                  year:
                    type: string
                    example: '2022'
                  stats:
                    type: array
                    example:
                      -
                        2023-06:
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'Task name'
                              total: 86400
                    items:
                      type: object
                      properties:
                        2023-06:
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'Task name'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Project identifier.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/v1/stats/task/{id}/daily':
    get:
      summary: 'Get daily task stats'
      operationId: getDailyTaskStats
      description: 'Return daily task stats.'
      parameters:
        -
          in: query
          name: month
          description: 'Month in format: "YYYY-MM", Default current month'
          example: quia
          required: false
          schema:
            type: string
            description: 'Month in format: "YYYY-MM", Default current month'
            example: quia
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  task:
                    id: '1'
                    name: 'Example task name'
                  month: 2022-12
                  stats:
                    -
                      '2023-06-30':
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'John Doe'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  task:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      name:
                        type: string
                        example: 'Example task name'
                  month:
                    type: string
                    example: 2022-12
                  stats:
                    type: array
                    example:
                      -
                        '2023-06-30':
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'John Doe'
                              total: 86400
                    items:
                      type: object
                      properties:
                        '2023-06-30':
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'John Doe'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Task identifier.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/stats/task/{id}/monthly':
    get:
      summary: 'Get monthy task stats'
      operationId: getMonthyTaskStats
      description: 'Return task user stats.'
      parameters:
        -
          in: query
          name: year
          description: 'Year in format: "YYYY", Default current year'
          example: quae
          required: false
          schema:
            type: string
            description: 'Year in format: "YYYY", Default current year'
            example: quae
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  project:
                    id: '1'
                    name: 'Example task name'
                  year: '2022'
                  stats:
                    -
                      2023-06:
                        total: 86400
                        objects:
                          '1':
                            id: 1
                            name: 'John Doe'
                            total: 86400
                  total: 100
                  allowed_months:
                    - 2022-12
                    - 2023-01
                  allowed_years:
                    - '2022'
                    - '2023'
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: string
                        example: '1'
                      name:
                        type: string
                        example: 'Example task name'
                  year:
                    type: string
                    example: '2022'
                  stats:
                    type: array
                    example:
                      -
                        2023-06:
                          total: 86400
                          objects:
                            1:
                              id: 1
                              name: 'John Doe'
                              total: 86400
                    items:
                      type: object
                      properties:
                        2023-06:
                          type: object
                          properties:
                            total:
                              type: integer
                              example: 86400
                            objects:
                              type: object
                              properties:
                                1:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      example: 1
                                    name:
                                      type: string
                                      example: 'John Doe'
                                    total:
                                      type: integer
                                      example: 86400
                  total:
                    type: integer
                    example: 100
                  allowed_months:
                    type: array
                    example:
                      - 2022-12
                      - 2023-01
                    items:
                      type: string
                  allowed_years:
                    type: array
                    example:
                      - '2022'
                      - '2023'
                    items:
                      type: string
      tags:
        - Stats
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Task identifier.'
        example: 2
        required: true
        schema:
          type: integer
  /api/v1/stats/total:
    get:
      summary: 'Get total task stats'
      operationId: getTotalTaskStats
      description: 'Return total task stats.'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 1
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 9
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 9
        -
          in: query
          name: user_id
          description: 'User identifier'
          example: 16
          required: false
          schema:
            type: integer
            description: 'User identifier'
            example: 16
        -
          in: query
          name: task_id
          description: 'Task identifier'
          example: 4
          required: false
          schema:
            type: integer
            description: 'Task identifier'
            example: 4
        -
          in: query
          name: project_id
          description: 'Project identifier'
          example: 13
          required: false
          schema:
            type: integer
            description: 'Project identifier'
            example: 13
        -
          in: query
          name: date_from
          description: 'Date from'
          example: mollitia
          required: false
          schema:
            type: string
            description: 'Date from'
            example: mollitia
        -
          in: query
          name: date_to
          description: 'Date to'
          example: ipsa
          required: false
          schema:
            type: string
            description: 'Date to'
            example: ipsa
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - Stats
      security: []
  /api/v1/packages:
    get:
      summary: 'Return package limits'
      operationId: returnPackageLimits
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Subscription
      security: []
  /api/v1/subscription:
    get:
      summary: 'Get active subscription'
      operationId: getActiveSubscription
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  start: 1686580275
                  start_date: '2023-01-02 10:00:12'
                  end: 1686580275
                  end_date: '2023-01-02 11:00:12'
                properties:
                  start:
                    type: integer
                    example: 1686580275
                  start_date:
                    type: string
                    example: '2023-01-02 10:00:12'
                  end:
                    type: integer
                    example: 1686580275
                  end_date:
                    type: string
                    example: '2023-01-02 11:00:12'
      tags:
        - Subscription
      security: []
  /api/v1/current-stats:
    get:
      summary: 'Get current stats'
      operationId: getCurrentStats
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  tasks: 18
                  can_add_task: true
                  projects: 2
                  can_add_project: false
                  space: 512012
                  can_add_files: false
                properties:
                  tasks:
                    type: integer
                    example: 18
                  can_add_task:
                    type: boolean
                    example: true
                  projects:
                    type: integer
                    example: 2
                  can_add_project:
                    type: boolean
                    example: false
                  space:
                    type: integer
                    example: 512012
                  can_add_files:
                    type: boolean
                    example: false
      tags:
        - Subscription
      security: []
  /api/v1/packages-site:
    get:
      summary: 'Return package limits'
      operationId: returnPackageLimits
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Subscription
      security: []
  /api/v1/users:
    get:
      summary: 'Get users list'
      operationId: getUsersList
      description: 'Return users account list.'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 2
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 14
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 14
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total_rows: 100
                  total_pages: '4'
                  current_page: 1
                  has_more: true
                  data:
                    -
                      id: 1
                      firstname: John
                      lastname: Doe
                      phone: 123456789
                      email: john@doe.com
                      activated: 1
                      owner: 0
                      superuser: 0
                      can_delete: 1
                      user_permission_id: 1
                      user_permission_name: 'Permission name'
                properties:
                  total_rows:
                    type: integer
                    example: 100
                  total_pages:
                    type: string
                    example: '4'
                  current_page:
                    type: integer
                    example: 1
                  has_more:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        firstname: John
                        lastname: Doe
                        phone: 123456789
                        email: john@doe.com
                        activated: 1
                        owner: 0
                        superuser: 0
                        can_delete: 1
                        user_permission_id: 1
                        user_permission_name: 'Permission name'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        firstname:
                          type: string
                          example: John
                        lastname:
                          type: string
                          example: Doe
                        phone:
                          type: integer
                          example: 123456789
                        email:
                          type: string
                          example: john@doe.com
                        activated:
                          type: integer
                          example: 1
                        owner:
                          type: integer
                          example: 0
                        superuser:
                          type: integer
                          example: 0
                        can_delete:
                          type: integer
                          example: 1
                        user_permission_id:
                          type: integer
                          example: 1
                        user_permission_name:
                          type: string
                          example: 'Permission name'
      tags:
        - 'User management'
      security: []
  /api/v1/user:
    put:
      summary: 'Create user account'
      operationId: createUserAccount
      description: 'Create user account. After create account is ready to use.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The given e-mail address is already registered'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The given e-mail address is already registered'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'User first name.'
                  example: minus
                lastname:
                  type: string
                  description: 'User last name.'
                  example: excepturi
                email:
                  type: string
                  description: 'User e-mail address.'
                  example: coty.cremin@example.net
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: 'LFYPUs:(da$xyWi@6z$'
                phone:
                  type: string
                  description: 'User phone number.'
                  example: qui
                user_permission_id:
                  type: integer
                  description: 'Permission group identifier (if not set default permission will be used).'
                  example: 13
                superuser:
                  type: boolean
                  description: 'If set true user have full access regardless of permissions.'
                  example: false
              required:
                - firstname
                - lastname
                - email
                - password
      security: []
  /api/v1/invite:
    post:
      summary: 'Invite user'
      operationId: inviteUser
      description: 'Send invitation to the email address provided.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The given e-mail address is already registered'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The given e-mail address is already registered'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'User e-mail address.'
                  example: rosalinda11@example.com
                user_permission_id:
                  type: integer
                  description: 'Permission group identifier (if not set default permission will be used).'
                  example: 16
              required:
                - email
      security: []
  '/api/v1/user/{id}':
    get:
      summary: 'Get user account data'
      operationId: getUserAccountData
      description: 'Return user account data.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  firstname: John
                  lastname: Doe
                  phone: 123456789
                  email: john@doe.com
                  activated: 1
                  owner: 0
                  superuser: 0
                  can_delete: 1
                  user_permission_id: 1
                  user_permission_name: 'Permission name'
                properties:
                  id:
                    type: integer
                    example: 1
                  firstname:
                    type: string
                    example: John
                  lastname:
                    type: string
                    example: Doe
                  phone:
                    type: integer
                    example: 123456789
                  email:
                    type: string
                    example: john@doe.com
                  activated:
                    type: integer
                    example: 1
                  owner:
                    type: integer
                    example: 0
                  superuser:
                    type: integer
                    example: 0
                  can_delete:
                    type: integer
                    example: 1
                  user_permission_id:
                    type: integer
                    example: 1
                  user_permission_name:
                    type: string
                    example: 'Permission name'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'User does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User does not exist'
      tags:
        - 'User management'
      security: []
    put:
      summary: 'Update user account data'
      operationId: updateUserAccountData
      description: 'Update user account data.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'User first name.'
                  example: culpa
                lastname:
                  type: string
                  description: 'User last name.'
                  example: dolores
                email:
                  type: string
                  description: 'User e-mail address.'
                  example: kassulke.kariane@example.com
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: 3I._V5b`
                phone:
                  type: string
                  description: 'User phone number.'
                  example: sit
                user_permission_id:
                  type: integer
                  description: 'Permission group identifier.'
                  example: 14
                superuser:
                  type: boolean
                  description: 'If set true user have full access regardless of permissions.'
                  example: false
      security: []
    delete:
      summary: 'Delete user account'
      operationId: deleteUserAccount
      description: 'Delete user account.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'User does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User does not exist'
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'User identifier.'
        example: 10
        required: true
        schema:
          type: integer
  /api/v1/user/permission:
    get:
      summary: 'Get logged user permissions'
      operationId: getLoggedUserPermissions
      description: 'Get logged user permissions'
      parameters:
        -
          in: query
          name: text
          description: 'return text permission'
          example: false
          required: false
          schema:
            type: boolean
            description: 'return text permission'
            example: false
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  permission:
                    project:
                      - list
                      - create
                      - update
                      - delete
                    task:
                      - list
                      - create
                      - update
                      - delete
                    user:
                      - list
                      - create
                      - update
                      - delete
                    permission:
                      - list
                      - create
                      - update
                      - delete
                properties:
                  permission:
                    type: object
                    properties:
                      project:
                        type: array
                        example:
                          - list
                          - create
                          - update
                          - delete
                        items:
                          type: string
                      task:
                        type: array
                        example:
                          - list
                          - create
                          - update
                          - delete
                        items:
                          type: string
                      user:
                        type: array
                        example:
                          - list
                          - create
                          - update
                          - delete
                        items:
                          type: string
                      permission:
                        type: array
                        example:
                          - list
                          - create
                          - update
                          - delete
                        items:
                          type: string
      tags:
        - 'User management'
      security: []
  /api/v1/profile:
    get:
      summary: 'User profile'
      operationId: userProfile
      description: 'User profile.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  firstname: John
                  lastname: Doe
                  phone: 123456789
                  email: john@doe.com
                  activated: 1
                  owner: 0
                  superuser: 0
                  user_permission_id: 1
                  user_permission_name: 'Permission name'
                properties:
                  id:
                    type: integer
                    example: 1
                  firstname:
                    type: string
                    example: John
                  lastname:
                    type: string
                    example: Doe
                  phone:
                    type: integer
                    example: 123456789
                  email:
                    type: string
                    example: john@doe.com
                  activated:
                    type: integer
                    example: 1
                  owner:
                    type: integer
                    example: 0
                  superuser:
                    type: integer
                    example: 0
                  user_permission_id:
                    type: integer
                    example: 1
                  user_permission_name:
                    type: string
                    example: 'Permission name'
      tags:
        - 'User management'
      security: []
    put:
      summary: 'Update user profile'
      operationId: updateUserProfile
      description: 'User profile.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'User first name.'
                  example: sit
                lastname:
                  type: string
                  description: 'User last name.'
                  example: aut
                email:
                  type: string
                  description: 'User e-mail address.'
                  example: albina70@example.com
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: '`]3?$0jN{CMc9U&L<Q2'
                phone:
                  type: string
                  description: 'User phone number.'
                  example: eveniet
      security: []
  /api/v1/profile/avatar:
    post:
      summary: 'Update user profile avatar'
      operationId: updateUserProfileAvatar
      description: 'User profile avatar.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'avatar file.'
      security: []
  /api/v1/settings:
    get:
      summary: 'User settings'
      operationId: userSettings
      description: 'User settings.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  locale: pl
                properties:
                  locale:
                    type: string
                    example: pl
      tags:
        - 'User management'
      security: []
    put:
      summary: 'Update user settings'
      operationId: updateUserSettings
      description: 'User settings.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                locale:
                  type: string
                  description: 'Locale ex. pl.'
                  example: en_IE
                notifications:
                  type: string
                  description: 'User e-mail notifications (separated by a comma)'
                  example: veritatis
                mobile_notifications:
                  type: string
                  description: 'Mobile notifications (separated by a comma)'
                  example: rerum
      security: []
  /api/v1/get-firm-id:
    get:
      summary: 'Get login user firm identifier'
      operationId: getLoginUserFirmIdentifier
      description: 'Get login user firm identifier.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      security: []
  /api/v1/get-id:
    get:
      summary: 'Get login user identifier'
      operationId: getLoginUserIdentifier
      description: 'Get login user identifier.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      security: []
  /api/v1/user/getActiveTimer:
    get:
      summary: 'Get active timer'
      operationId: getActiveTimer
      description: 'Get user active timer list.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total: 100
                  data:
                    -
                      id: 1
                      task_id: 12
                      status: active
                      total: 1
                      task: 'Task name'
                properties:
                  total:
                    type: integer
                    example: 100
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        task_id: 12
                        status: active
                        total: 1
                        task: 'Task name'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        task_id:
                          type: integer
                          example: 12
                        status:
                          type: string
                          example: active
                        total:
                          type: integer
                          example: 1
                        task:
                          type: string
                          example: 'Task name'
      tags:
        - 'User management'
      security: []
  /api/v1/firm-data:
    get:
      summary: 'Get firm data'
      operationId: getFirmData
      description: 'Get firm data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  identifier: 'Firm ID'
                  firstname: John
                  lastname: Doe
                  email: example@com.pl
                  nip: '0123456789'
                  name: 'Firm name'
                  street: 'Street name'
                  house_no: '12'
                  apartment_no: 1A
                  city: London
                  zip: 91-000
                  country: PL
                  phone: '888777666'
                properties:
                  identifier:
                    type: string
                    example: 'Firm ID'
                  firstname:
                    type: string
                    example: John
                  lastname:
                    type: string
                    example: Doe
                  email:
                    type: string
                    example: example@com.pl
                  nip:
                    type: string
                    example: '0123456789'
                  name:
                    type: string
                    example: 'Firm name'
                  street:
                    type: string
                    example: 'Street name'
                  house_no:
                    type: string
                    example: '12'
                  apartment_no:
                    type: string
                    example: 1A
                  city:
                    type: string
                    example: London
                  zip:
                    type: string
                    example: 91-000
                  country:
                    type: string
                    example: PL
                  phone:
                    type: string
                    example: '888777666'
      tags:
        - 'User management'
      security: []
    post:
      summary: 'Update firm data'
      operationId: updateFirmData
      description: 'Update firm data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'Owner first name.'
                  example: voluptatem
                lastname:
                  type: string
                  description: 'Owner last name.'
                  example: doloremque
                email:
                  type: string
                  description: 'Firm e-mail address.'
                  example: qdeckow@example.com
                nip:
                  type: string
                  description: NIP.
                  example: vitae
                name:
                  type: string
                  description: 'Firm name.'
                  example: culpa
                street:
                  type: string
                  description: 'Firm street.'
                  example: eos
                house_no:
                  type: string
                  description: 'Firm house no.'
                  example: aut
                apartment_no:
                  type: string
                  description: 'Firm apartment no.'
                  example: rem
                city:
                  type: string
                  description: 'Firm city.'
                  example: officiis
                zip:
                  type: string
                  description: 'Firm zip.'
                  example: debitis
                country:
                  type: string
                  description: 'Firm country code.'
                  example: sint
                phone:
                  type: string
                  description: 'Firm phone.'
                  example: voluptates
      security: []
  /api/v1/invoice-data:
    get:
      summary: 'Get invoice data'
      operationId: getInvoiceData
      description: 'Get invoice data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  type: firm
                  name: 'Firm name'
                  firstname: John
                  lastname: Doe
                  nip: '0123456789'
                  street: 'Street name'
                  house_no: '12'
                  apartment_no: 1A
                  city: London
                  zip: 91-000
                properties:
                  type:
                    type: string
                    example: firm
                  name:
                    type: string
                    example: 'Firm name'
                  firstname:
                    type: string
                    example: John
                  lastname:
                    type: string
                    example: Doe
                  nip:
                    type: string
                    example: '0123456789'
                  street:
                    type: string
                    example: 'Street name'
                  house_no:
                    type: string
                    example: '12'
                  apartment_no:
                    type: string
                    example: 1A
                  city:
                    type: string
                    example: London
                  zip:
                    type: string
                    example: 91-000
      tags:
        - 'User management'
      security: []
    post:
      summary: 'Update invoice data'
      operationId: updateInvoiceData
      description: 'Update invoice data'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'Type (one of: firm, person).'
                  example: amet
                firstname:
                  type: string
                  description: 'Owner first name.'
                  example: natus
                lastname:
                  type: string
                  description: 'Owner last name.'
                  example: sit
                nip:
                  type: string
                  description: NIP.
                  example: recusandae
                name:
                  type: string
                  description: 'Firm name.'
                  example: soluta
                street:
                  type: string
                  description: 'Firm street.'
                  example: delectus
                house_no:
                  type: string
                  description: 'Firm house no.'
                  example: accusamus
                apartment_no:
                  type: string
                  description: 'Firm apartment no.'
                  example: nihil
                city:
                  type: string
                  description: 'Firm city.'
                  example: voluptatum
                zip:
                  type: string
                  description: 'Firm zip.'
                  example: nobis
                country:
                  type: string
                  description: 'Country code.'
                  example: hic
      security: []
  '/api/v1/invite/{token}':
    get:
      summary: 'Validate invite token'
      operationId: validateInviteToken
      description: 'Check validate invite token.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{'email': 'john@doe.com'}"
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The given token is invalid'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The given token is invalid'
      tags:
        - 'User management'
      security: []
    put:
      summary: 'Confirm invitation'
      operationId: confirmInvitation
      description: 'Confirm invitation and create new user account.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The given token is invalid'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The given token is invalid'
      tags:
        - 'User management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'User first name.'
                  example: officia
                lastname:
                  type: string
                  description: 'User last name.'
                  example: reprehenderit
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: 'mA{E&sX1%S@_d;d'
                phone:
                  type: string
                  description: 'User phone number.'
                  example: non
              required:
                - firstname
                - lastname
                - password
      security: []
    parameters:
      -
        in: path
        name: token
        description: 'Invite token from invitation message.'
        example: rerum
        required: true
        schema:
          type: string
  /api/v1/permissions:
    get:
      summary: 'Get permissions group list'
      operationId: getPermissionsGroupList
      description: 'Return permissions list.'
      parameters:
        -
          in: query
          name: size
          description: 'Number of rows. Default: 50'
          example: 11
          required: false
          schema:
            type: integer
            description: 'Number of rows. Default: 50'
            example: 11
        -
          in: query
          name: page
          description: 'Number of page (pagination). Default: 1'
          example: 2
          required: false
          schema:
            type: integer
            description: 'Number of page (pagination). Default: 1'
            example: 2
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  total_rows: 100
                  total_pages: '4'
                  current_page: 1
                  has_more: true
                  data:
                    -
                      id: 1
                      name: 'Example group name'
                      permissions:
                        -
                          name: 'module name'
                          perm:
                            - list
                            - create
                      is_default: 0
                      can_delete: 1
                properties:
                  total_rows:
                    type: integer
                    example: 100
                  total_pages:
                    type: string
                    example: '4'
                  current_page:
                    type: integer
                    example: 1
                  has_more:
                    type: boolean
                    example: true
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: 'Example group name'
                        permissions:
                          -
                            name: 'module name'
                            perm:
                              - list
                              - create
                        is_default: 0
                        can_delete: 1
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: 'Example group name'
                        permissions:
                          type: array
                          example:
                            -
                              name: 'module name'
                              perm:
                                - list
                                - create
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: 'module name'
                              perm:
                                type: array
                                example:
                                  - list
                                  - create
                                items:
                                  type: string
                        is_default:
                          type: integer
                          example: 0
                        can_delete:
                          type: integer
                          example: 1
      tags:
        - 'User permissions'
      security: []
  /api/v1/permission:
    put:
      summary: 'Create new persmission group'
      operationId: createNewPersmissionGroup
      description: "Create new persmission group. Permissions should look like this:\nprojects:list,create,update,delete;users:list"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: "'projects:' does not contain a list of items."
                  errors:
                    permissions:
                      - "'projects:' does not contain a list of items."
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "'projects:' does not contain a list of items."
                  errors:
                    type: object
                    properties:
                      permissions:
                        type: array
                        example:
                          - "'projects:' does not contain a list of items."
                        items:
                          type: string
      tags:
        - 'User permissions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Group permission name.'
                  example: voluptatem
                permissions:
                  type: string
                  description: Permission.
                  example: et
                is_default:
                  type: boolean
                  description: 'Set permission default.'
                  example: false
              required:
                - name
                - permissions
      security: []
  '/api/v1/permission/{id}':
    get:
      summary: 'Get persmission group details'
      operationId: getPersmissionGroupDetails
      description: 'Get persmission group details.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 'Example group name'
                  permissions:
                    module:
                      - list
                      - create
                  is_default: 0
                  can_delete: 1
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: 'Example group name'
                  permissions:
                    type: object
                    properties:
                      module:
                        type: array
                        example:
                          - list
                          - create
                        items:
                          type: string
                  is_default:
                    type: integer
                    example: 0
                  can_delete:
                    type: integer
                    example: 1
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Permission does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Permission does not exist'
      tags:
        - 'User permissions'
      security: []
    put:
      summary: 'Update persmission group'
      operationId: updatePersmissionGroup
      description: 'Update persmission group.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'User permissions'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Group permission name.'
                  example: nesciunt
                permissions:
                  type: string
                  description: Permission.
                  example: sit
                is_default:
                  type: boolean
                  description: 'Set permission default.'
                  example: false
      security: []
    delete:
      summary: 'Delete persmission group'
      operationId: deletePersmissionGroup
      description: 'Delete persmission group.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Permission does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Permission does not exist'
      tags:
        - 'User permissions'
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Permission group identifier.'
        example: 10
        required: true
        schema:
          type: integer
  '/api/v1/permission/{id}/add':
    put:
      summary: 'Add permission to persmission group'
      operationId: addPermissionToPersmissionGroup
      description: 'Add permission to persmission group.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Permission does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Permission does not exist'
      tags:
        - 'User permissions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  description: 'Object name.'
                  example: facere
                action:
                  type: string
                  description: 'Action name (if not set, allow all actions).'
                  example: similique
              required:
                - object
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Permission group identifier.'
        example: 16
        required: true
        schema:
          type: integer
  '/api/v1/permission/{id}/del':
    delete:
      summary: 'Delete permission from persmission group'
      operationId: deletePermissionFromPersmissionGroup
      description: 'Delete permission from persmission group.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Permission does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Permission does not exist'
      tags:
        - 'User permissions'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object:
                  type: string
                  description: 'Object name.'
                  example: facilis
                action:
                  type: string
                  description: 'Action name (if not set, allow all actions).'
                  example: in
              required:
                - object
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Permission group identifier.'
        example: 20
        required: true
        schema:
          type: integer
  /api/v1/permission/modules:
    get:
      summary: 'Return permission modules'
      operationId: returnPermissionModules
      description: 'Return permission modules'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: 'Authorization:'
          description: ''
          example: 'Bearer {TOKEN}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  permissions:
                    -
                      name: 'module name'
                      perm:
                        - list
                        - create
                properties:
                  permissions:
                    type: array
                    example:
                      -
                        name: 'module name'
                        perm:
                          - list
                          - create
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: 'module name'
                        perm:
                          type: array
                          example:
                            - list
                            - create
                          items:
                            type: string
      tags:
        - 'User permissions'
      security: []
  /api/v1/is-login:
    get:
      summary: 'Check user is login'
      operationId: checkUserIsLogin
      description: 'Check user is login'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    firstname: John
                    lastname: Doe
                    locale: pl
                    owner: 0
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The provided credentials are incorrect.'
                  errors:
                    email:
                      - 'The provided credentials are incorrect.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The provided credentials are incorrect.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The provided credentials are incorrect.'
                        items:
                          type: string
      tags:
        - 'User registation'
      security: []
  /api/v1/logout:
    get:
      summary: Logout
      operationId: logout
      description: Logout.
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User registation'
      security: []
  /api/v1/removeAccount:
    delete:
      summary: 'Remove logged user account'
      operationId: removeLoggedUserAccount
      description: 'Remove logged user account'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example: {  }
                properties: {  }
      tags:
        - 'User registation'
      security: []
  /api/v1/register:
    post:
      summary: 'Register new account'
      operationId: registerNewAccount
      description: 'Create new user account. After registration, a confirmation link is sent to the provided e-mail address.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: boolean
                example: true
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The provided email is already registered.'
                  errors:
                    email:
                      - 'The provided email is already registered.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The provided email is already registered.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The provided email is already registered.'
                        items:
                          type: string
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email address.'
                  example: john@doe.com
                source:
                  type: string
                  description: 'Register source. One of: app/www'
                  example: est
              required:
                - email
      security: []
  '/api/v1/register/confirm/{token}':
    get:
      summary: 'Validate register token'
      operationId: validateRegisterToken
      description: 'Check validate register token from confirmation message.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{'email': 'john@doe.com'}"
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The provided email is already registered.'
                  errors:
                    email:
                      - 'The provided email is already registered.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The provided email is already registered.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The provided email is already registered.'
                        items:
                          type: string
      tags:
        - 'User registation'
      security: []
    post:
      summary: 'Confirm register'
      operationId: confirmRegister
      description: 'Confirm register and finish registration.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'Invalid register token.'
                  errors:
                    token:
                      - 'Invalid register token.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Invalid register token.'
                  errors:
                    type: object
                    properties:
                      token:
                        type: array
                        example:
                          - 'Invalid register token.'
                        items:
                          type: string
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                  description: 'User first name.'
                  example: consequatur
                lastname:
                  type: string
                  description: 'User last name.'
                  example: vel
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: zC1-EX@
                firm_identifier:
                  type: string
                  description: 'User firm name.'
                  example: quam
                phone:
                  type: string
                  description: 'User phone number.'
                  example: animi
              required:
                - firstname
                - lastname
                - password
                - firm_identifier
                - phone
      security: []
    parameters:
      -
        in: path
        name: token
        description: 'Register token.'
        example: veritatis
        required: true
        schema:
          type: string
  /api/v1/login:
    post:
      summary: 'Get token'
      operationId: getToken
      description: 'Return auth bearer Token.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    token: xxxxxxxx
                    firstname: John
                    lastname: Doe
                    locale: pl
                    owner: 0
                    avatar: 'b64 avatar image'
                    permission:
                      project:
                        - list
                        - create
                        - update
                        - delete
                      task:
                        - list
                        - create
                        - update
                        - delete
                      user:
                        - list
                        - create
                        - update
                        - delete
                      permission:
                        - list
                        - create
                        - update
                        - delete
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'The provided credentials are incorrect.'
                  errors:
                    email:
                      - 'The provided credentials are incorrect.'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'The provided credentials are incorrect.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The provided credentials are incorrect.'
                        items:
                          type: string
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Account e-mail address'
                  example: aturner@example.org
                password:
                  type: string
                  description: 'Account password'
                  example: ';NY+/""E;J?v'
                device_name:
                  type: string
                  description: 'Device name'
                  example: saepe
                mobile:
                  type: integer
                  description: 'From mobile app default: 0'
                  example: 20
                firm_id:
                  type: integer
                  description: 'Firm identifier (required if e-mail address is register on two or more firms)'
                  example: 2
              required:
                - email
                - password
                - device_name
      security: []
  /api/v1/forgot-password:
    post:
      summary: 'Forgot password'
      operationId: forgotPassword
      description: 'Send password reset link'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'User does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User does not exist'
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Account e-mail address'
                  example: nyah.renner@example.net
                firm_id:
                  type: integer
                  description: 'Firm identifier (if e-mail address exist in more than once firms)'
                  example: 12
              required:
                - email
      security: []
  /api/v1/reset-password:
    get:
      summary: 'Validate token reset password'
      operationId: validateTokenResetPassword
      description: 'Validate token reset password'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'forgot password token'
                  example: officia
                email:
                  type: string
                  description: 'Account e-mail address'
                  example: abagail73@example.org
              required:
                - token
                - email
      security: []
    post:
      summary: 'Reset password'
      operationId: resetPassword
      description: 'Send password reset link'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'User registation'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'forgot password token'
                  example: eveniet
                email:
                  type: string
                  description: 'Account e-mail address'
                  example: karmstrong@example.org
                password:
                  type: string
                  description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
                  example: 'Gm$)-"ffmo64(r{@Y4I3'
              required:
                - token
                - email
                - password
      security: []
  /api/v1/get-email-firm-ids:
    get:
      summary: 'Get email firm ids'
      operationId: getEmailFirmIds
      description: "Get user email assigned firm identifiers\nBecause e-mail addresses may be repeated within other companies, if the e-mail address exists more than once,\nyou must enter the company ID when logging in / remembering the password."
      parameters:
        -
          in: query
          name: email
          description: 'Account e-mail address'
          example: cristobal.hartmann@example.org
          required: true
          schema:
            type: string
            description: 'Account e-mail address'
            example: cristobal.hartmann@example.org
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    name: 'Example Firm'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: true
                  message: 'User does not exist'
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User does not exist'
      tags:
        - 'User registation'
      security: []
  /api/v1/dashboard:
    get:
      summary: 'Get dashboard stats'
      operationId: getDashboardStats
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - dashboard
      security: []
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Notifications
    description: ''
  -
    name: Orders
    description: ''
  -
    name: Others
    description: ''
  -
    name: Payments
    description: ''
  -
    name: Search
    description: ''
  -
    name: Stats
    description: ''
  -
    name: Subscription
    description: ''
  -
    name: 'User management'
    description: ''
  -
    name: 'User permissions'
    description: ''
  -
    name: 'User registation'
    description: ''
  -
    name: dashboard
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
